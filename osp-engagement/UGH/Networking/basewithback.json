{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string"
        },
        "virtualMachineName": {
            "type": "string"
        },
        "virtualMachineSize": {
            "type": "string"
        },
        "adminUsername": {
            "type": "string"
        },
        "virtualNetworkName": {
            "type": "string"
        },
        "networkInterfaceName": {
            "type": "string"
        },
        "backupVaultName": {
            "type": "string"
        },
        "backupFabricName": {
            "type": "string"
        },
        "backupVaultRGName": {
            "type": "string"
        },
        "backupVaultRGIsNew": {
            "type": "bool"
        },
        "backupPolicyName": {
            "type": "string"
        },
        "backupPolicySchedule": {
            "type": "object"
        },
        "backupPolicyRetention": {
            "type": "object"
        },
        "backupContainerName": {
            "type": "string"
        },
        "backupItemName": {
            "type": "string"
        },
        "networkSecurityGroupName": {
            "type": "string"
        },
        "adminPublicKey": {
            "type": "string"
        },
        "availabilitySetName": {
            "type": "string"
        },
        "availabilitySetPlatformFaultDomainCount": {
            "type": "string"
        },
        "availabilitySetPlatformUpdateDomainCount": {
            "type": "string"
        },
        "addressPrefix": {
            "type": "string"
        },
        "subnetName": {
            "type": "string"
        },
        "subnetPrefix": {
            "type": "string"
        },
        "publicIpAddressName": {
            "type": "string"
        },
        "publicIpAddressType": {
            "type": "string"
        },
        "publicIpAddressSku": {
            "type": "string"
        }
    },
    "variables": {
        "vnetId": "[resourceId('c3iotexample','Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]"
    },
    "resources": [
        {
            "name": "[parameters('virtualMachineName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2016-04-30-preview",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceName'))]",
                "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]"
            ],
            "properties": {
                "osProfile": {
                    "computerName": "[parameters('virtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": "true",
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('adminPublicKey')]"
                                }
                            ]
                        }
                    }
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "OpenLogic",
                        "offer": "CentOS",
                        "sku": "7.3",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName'))]"
                        }
                    ]
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
                }
            }
        },
        {
            "name": "[parameters('availabilitySetName')]",
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2016-04-30-preview",
            "location": "[parameters('location')]",
            "properties": {
                "platformFaultDomainCount": "[parameters('availabilitySetPlatformFaultDomainCount')]",
                "platformUpdateDomainCount": "[parameters('availabilitySetPlatformUpdateDomainCount')]",
                "managed": true
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[concat('BackupVaultPolicy', '-', parameters('backupVaultName'), '-', parameters('backupPolicyName'))]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('backupVaultRGName')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "name": "[parameters('backupVaultName')]",
                            "type": "Microsoft.RecoveryServices/vaults",
                            "apiVersion": "2016-06-01",
                            "location": "[parameters('location')]",
                            "sku": {
                                "name": "RS0",
                                "tier": "Standard"
                            },
                            "properties": {},
                            "dependsOn": []
                        },
                        {
                            "name": "[concat(parameters('backupVaultName'), '/', parameters('backupPolicyName'))]",
                            "apiVersion": "2017-07-01",
                            "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
                            "properties": {
                                "backupManagementType": "AzureIaasVM",
                                "schedulePolicy": "[parameters('backupPolicySchedule')]",
                                "retentionPolicy": "[parameters('backupPolicyRetention')]"
                            },
                            "dependsOn": [
                                "[resourceId(parameters('backupVaultRGName'), 'Microsoft.RecoveryServices/vaults', parameters('backupVaultName'))]"
                            ]
                        }
                    ]
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[concat(parameters('virtualMachineName'), '-' , 'BackupIntent')]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('backupVaultRGName')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "name": "[concat(parameters('backupVaultName'), '/', parameters('backupFabricName'), '/', parameters('backupItemName'))]",
                            "apiVersion": "2017-07-01",
                            "type": "Microsoft.RecoveryServices/vaults/backupFabrics/backupProtectionIntent",
                            "properties": {
                                "friendlyName": "[concat(parameters('virtualMachineName'), 'BackupIntent')]",
                                "protectionIntentItemType": "AzureResourceItem",
                                "policyId": "[resourceId(parameters('backupVaultRGName'), 'Microsoft.RecoveryServices/vaults/backupPolicies', parameters('backupVaultName'), parameters('backupPolicyName'))]",
                                "sourceResourceId": "[resourceId('c3iotexample', 'Microsoft.Compute/virtualMachines', parameters('virtualMachineName'))]"
                            }
                        }
                    ]
                }
            },
            "dependsOn": [
                "[resourceId('c3iotexample', 'Microsoft.Compute/virtualMachines', parameters('virtualMachineName'))]",
                "[concat('Microsoft.Resources/deployments', '/', 'BackupVaultPolicy', '-', parameters('backupVaultName'), '-', parameters('backupPolicyName'))]"
            ]
        },
        {
            "name": "[parameters('virtualNetworkName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2017-08-01",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "name": "[parameters('networkInterfaceName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2016-09-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
                "[concat('Microsoft.Network/publicIpAddresses/', parameters('publicIpAddressName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('c3iotexample','Microsoft.Network/publicIpAddresses', parameters('publicIpAddressName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('c3iotexample', 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
                }
            }
        },
        {
            "name": "[parameters('publicIpAddressName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2017-08-01",
            "location": "[parameters('location')]",
            "properties": {
                "publicIpAllocationMethod": "[parameters('publicIpAddressType')]"
            },
            "sku": {
                "name": "[parameters('publicIpAddressSku')]"
            }
        },
        {
            "name": "[parameters('networkSecurityGroupName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2017-06-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-ssh",
                        "properties": {
                            "priority": 1000,
                            "protocol": "TCP",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "22"
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        }
    }
}