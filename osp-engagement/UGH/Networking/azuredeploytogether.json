{
	"$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"adminUserName": {
			"type": "string",
			"defaultValue": "azureuser",
			"metadata": {
				"description": "User name for the Virtual Machine."
			}
		},
		"sshKeyData": {
			"type": "string",
			"metadata": {
				"description": "SSH rsa public key file as a string."
			},
			"defaultValue": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsvQoaddMbc5zdqMXnBrn53eatB1hzHwk0rlpg/SUn+B6yMJRq0fvntn1/LWkhsOv2QIOkSZhnZO5rUJuoSaBZuRkXf2wUsva2Z9iaKMozzcadUXCU0y/2ekCPY+8eUZOSvTgmn2K0xT12H+rrzGK6MBgnFgDZ2npROZa4eF4SkMxcMpFbOiOEY53/OiokbwEFUXD3omrhURqJzOOWdaCy4XPjWvjEzpNagTM/uy0habgSVVa3Uj/aF8QkgixJOlgME4jBMyM4uyd/lCsgKvrFquwVbOWZUcic+lZTDVfjIUyqTkq6+avzxtWnxMNrktW7gfOA1Des53Vs4N4QL+af jenkins@jenkins"
		}
	},
	"variables": {
		"location": "[resourceGroup().location]",
		"virtualNetworkName": "dev-azure-vnet-01",
		"addressPrefix": "10.0.0.0/16",
		"SubnetName": "dev-azure-sn-",
		"subnetPrefix0": "10.0.1.0/24",
		"subnetPrefix1": "10.0.2.0/24",
		"subnetPrefix2": "10.0.3.0/24",
		"subnetPrefix3": "10.0.4.0/24",
		"networkSecurityGroups_dev_azure_nsg_app": "dev-azure-rt-01",
		"routetable1": "dev-azure-rt-app-01",
		"routename1": "dev-azure-rtr-nat-01",
        "routetable2": "dev-azure-rtr-data-01",
        "routename2": "dev-azure-rtr-nat-01",
        "NSG_App_Layer": "dev-azure-nsg-app",
        "NSG_Data_Layer": "dev-azure-nsg-data",
        "NSG_DMZ_Layer": "dev-azure-nsg-dmz",
        "NSG_PUB_Layer": "dev-azure-nsg-pub"
	},
	"resources": [{
			"comments": "This is the definition of a RouteTable specific to each Subnet",
			"type": "Microsoft.Network/routeTables",
			"name": "[variables('routetable1')]",
			"apiVersion": "2017-06-01",
			"location": "[variables('location')]",
			"properties": {
				"routes": [{
						"name": "[variables('routename1')]",
						"properties": {
							"provisioningState": "Succeeded",
							"addressPrefix": "0.0.0.0/0",
							"nextHopType": "VirtualAppliance",
							"nextHopIpAddress": "10.0.0.132"
						}
					}
				]
			}
		}, {
			"comments": "This is the definition of a Route within the RouteTable",
			"type": "Microsoft.Network/routeTables/routes",
			"name": "[concat(variables('routetable1'), '/', variables('routename1'))]",
			"apiVersion": "2017-06-01",
			"properties": {
				"addressPrefix": "0.0.0.0/0",
				"nextHopType": "VirtualAppliance",
				"nextHopIpAddress": "10.0.0.132"
			},
			"dependsOn": [
				"[resourceId('Microsoft.Network/routeTables', variables('routetable1'))]"
			]
		},{
			"comments": "This is the definition of a RouteTable specific to each Subnet",
			"type": "Microsoft.Network/routeTables",
			"name": "[variables('routetable2')]",
			"apiVersion": "2017-06-01",
			"location": "[variables('location')]",
			"properties": {
				"routes": [{
						"name": "[variables('routename1')]",
						"properties": {
							"provisioningState": "Succeeded",
							"addressPrefix": "0.0.0.0/0",
							"nextHopType": "VirtualAppliance",
							"nextHopIpAddress": "10.0.0.132"
						}
					}
				]
			}
		}, {
			"comments": "This is the definition of a Route within the RouteTable",
			"type": "Microsoft.Network/routeTables/routes",
			"name": "[concat(variables('routetable2'), '/', variables('routename2'))]",
			"apiVersion": "2017-06-01",
			"properties": {
				"addressPrefix": "0.0.0.0/0",
				"nextHopType": "VirtualAppliance",
				"nextHopIpAddress": "10.0.0.132"
			},
			"dependsOn": [
				"[resourceId('Microsoft.Network/routeTables', variables('routetable2'))]"
			]
		},  {
			"comments": "NSG for App Layer",
			"type": "Microsoft.Network/networkSecurityGroups",
			"name": "[variables('NSG_App_Layer')]",
			"apiVersion": "2017-06-01",
			"location": "[variables('location')]",
			"properties": {
				"securityRules": [{
						"name": "Port_8080",
						"properties": {
							"protocol": "TCP",
							"sourcePortRange": "*",
							"destinationPortRange": "8080",
							"sourceAddressPrefix": "10.0.1.0/24",
							"destinationAddressPrefix": "10.0.2.0/24",
							"access": "Allow",
							"priority": 100,
							"direction": "Inbound"
						}
					}
				],
				"defaultSecurityRules": [{
						"name": "AllowVnetInBound",
						"properties": {
							"description": "Allow inbound traffic from all VMs in VNET",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "*",
							"sourceAddressPrefix": "VirtualNetwork",
							"destinationAddressPrefix": "VirtualNetwork",
							"access": "Allow",
							"priority": 65000,
                            "direction": "Outbound"
						}
					}, {
						"name": "AllowAzureLoadBalancerInBound",
						"properties": {
							"description": "Allow inbound traffic from azure load balancer",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "*",
							"sourceAddressPrefix": "AzureLoadBalancer",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 65001,
							"direction": "Inbound"
						}
					}, {
						"name": "DenyAllInBound",
						"properties": {
							"description": "Deny all inbound traffic",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "*",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "*",
							"access": "Deny",
							"priority": 65500,
							"direction": "Inbound"
						}
					}, {
						"name": "AllowVnetOutBound",
						"properties": {
							"description": "Allow outbound traffic from all VMs to all VMs in VNET",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "*",
							"sourceAddressPrefix": "VirtualNetwork",
							"destinationAddressPrefix": "VirtualNetwork",
							"access": "Allow",
							"priority": 65000,
							"direction": "Outbound"
						}
					}, {
						"name": "AllowInternetOutBound",
						"properties": {
							"description": "Allow outbound traffic from all VMs to Internet",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "*",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "Internet",
							"access": "Allow",
							"priority": 65001,
							"direction": "Outbound"
						}
					}, {
						"name": "DenyAllOutBound",
						"properties": {
							"provisioningState": "Succeeded",
							"description": "Deny all outbound traffic",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "*",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "*",
							"access": "Deny",
							"priority": 65500,
							"direction": "Outbound"
						}
					}
				]
			}
		}, {
			"comments": "NSG for Data Layer",
			"type": "Microsoft.Network/networkSecurityGroups",
			"name": "[variables('NSG_Data_Layer')]",
			"apiVersion": "2017-06-01",
			"location": "[variables('location')]",
			"properties": {
				"securityRules": [],
				"defaultSecurityRules": [{
						"name": "AllowVnetInBound",
						"properties": {
							"description": "Allow inbound traffic from all VMs in VNET",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "*",
							"sourceAddressPrefix": "VirtualNetwork",
							"destinationAddressPrefix": "VirtualNetwork",
							"access": "Allow",
							"priority": 65000,
                            "direction": "Outbound"
						}
					}, {
						"name": "AllowAzureLoadBalancerInBound",
						"properties": {
							"description": "Allow inbound traffic from azure load balancer",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "*",
							"sourceAddressPrefix": "AzureLoadBalancer",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 65001,
							"direction": "Inbound"
						}
					}, {
						"name": "DenyAllInBound",
						"properties": {
							"description": "Deny all inbound traffic",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "*",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "*",
							"access": "Deny",
							"priority": 65500,
							"direction": "Inbound"
						}
					}, {
						"name": "AllowVnetOutBound",
						"properties": {
							"description": "Allow outbound traffic from all VMs to all VMs in VNET",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "*",
							"sourceAddressPrefix": "VirtualNetwork",
							"destinationAddressPrefix": "VirtualNetwork",
							"access": "Allow",
							"priority": 65000,
							"direction": "Outbound"
						}
					}, {
						"name": "AllowInternetOutBound",
						"properties": {
							"description": "Allow outbound traffic from all VMs to Internet",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "*",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "Internet",
							"access": "Allow",
							"priority": 65001,
							"direction": "Outbound"
						}
					}, {
						"name": "DenyAllOutBound",
						"etag": "W/\"7b56ff6c-dd40-4b16-9e59-ffadc8f592a4\"",
						"properties": {
							"provisioningState": "Succeeded",
							"description": "Deny all outbound traffic",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "*",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "*",
							"access": "Deny",
							"priority": 65500,
							"direction": "Outbound",
							"sourceAddressPrefixes": [],
							"destinationAddressPrefixes": []
						}
					}
				]
			}
		}, {
			"comments": "NSG for DMZ Layer",
			"type": "Microsoft.Network/networkSecurityGroups",
			"name": "[variables('NSG_DMZ_Layer')]",
			"apiVersion": "2017-06-01",
			"location": "[variables('location')]",
			"properties": {
				"securityRules": [{
						"name": "HTTP-allow",
						"properties": {
							"protocol": "Tcp",
							"sourcePortRange": "*",
							"destinationPortRange": "80",
							"sourceAddressPrefix": "12.226.154.130/32",
							"destinationAddressPrefix": "10.0.1.0/24",
							"access": "Allow",
							"priority": 110,
							"direction": "Inbound"
						}
					}, {
						"name": "HTTPS-allow",
						"etag": "W/\"b2e9804e-1afb-4eb9-ad89-9e7d022cd3b8\"",
						"properties": {
							"provisioningState": "Succeeded",
							"protocol": "Tcp",
							"sourcePortRange": "*",
							"destinationPortRange": "443",
							"sourceAddressPrefix": "12.226.154.130/32",
							"destinationAddressPrefix": "10.0.1.0/24",
							"access": "Allow",
							"priority": 120,
							"direction": "Inbound"
						}
					}
				],
				"defaultSecurityRules": [{
						"name": "AllowVnetInBound",
						"properties": {
							"description": "Allow inbound traffic from all VMs in VNET",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "*",
							"sourceAddressPrefix": "VirtualNetwork",
							"destinationAddressPrefix": "VirtualNetwork",
							"access": "Allow",
							"priority": 65000,
                            "direction": "Outbound"
						}
					}, {
						"name": "AllowAzureLoadBalancerInBound",
						"properties": {
							"description": "Allow inbound traffic from azure load balancer",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "*",
							"sourceAddressPrefix": "AzureLoadBalancer",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 65001,
							"direction": "Inbound"
						}
					}, {
						"name": "DenyAllInBound",
						"properties": {
							"description": "Deny all inbound traffic",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "*",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "*",
							"access": "Deny",
							"priority": 65500,
							"direction": "Inbound"
						}
					}, {
						"name": "AllowVnetOutBound",
						"properties": {
							"description": "Allow outbound traffic from all VMs to all VMs in VNET",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "*",
							"sourceAddressPrefix": "VirtualNetwork",
							"destinationAddressPrefix": "VirtualNetwork",
							"access": "Allow",
							"priority": 65000,
							"direction": "Outbound"
						}
					}, {
						"name": "AllowInternetOutBound",
						"properties": {
							"description": "Allow outbound traffic from all VMs to Internet",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "*",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "Internet",
							"access": "Allow",
							"priority": 65001,
							"direction": "Outbound"
						}
					}, {
						"name": "DenyAllOutBound",
						"etag": "W/\"7b56ff6c-dd40-4b16-9e59-ffadc8f592a4\"",
						"properties": {
							"provisioningState": "Succeeded",
							"description": "Deny all outbound traffic",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "*",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "*",
							"access": "Deny",
							"priority": 65500,
							"direction": "Outbound",
							"sourceAddressPrefixes": [],
							"destinationAddressPrefixes": []
						}
					}
				]
			}
		}, {
			"comments": "NSG for pub Layer",
			"type": "Microsoft.Network/networkSecurityGroups",
			"name": "[variables('NSG_PUB_Layer')]",
			"apiVersion": "2017-06-01",
			"location": "[variables('location')]",
			"properties": {
				"securityRules": [{
						"name": "SSH-allow",
						"properties": {
							"protocol": "Tcp",
							"sourcePortRange": "*",
							"destinationPortRange": "22",
							"sourceAddressPrefix": "12.226.154.130/32",
							"destinationAddressPrefix": "10.0.0.128/25",
							"access": "Allow",
							"priority": 110,
							"direction": "Inbound"
						}
					}, {
						"name": "Port_Any",
						"properties": {
							"description": "NAT outbound connections",
							"protocol": "*",
							"sourcePortRange": "0-65535",
							"destinationPortRange": "*",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 1001,
							"direction": "Inbound"
						}
					}
				],
				"defaultSecurityRules": [{
						"name": "AllowVnetInBound",
						"properties": {
							"description": "Allow inbound traffic from all VMs in VNET",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "*",
							"sourceAddressPrefix": "VirtualNetwork",
							"destinationAddressPrefix": "VirtualNetwork",
							"access": "Allow",
							"priority": 65000,
                            "direction": "Outbound"
						}
					}, {
						"name": "AllowAzureLoadBalancerInBound",
						"properties": {
							"description": "Allow inbound traffic from azure load balancer",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "*",
							"sourceAddressPrefix": "AzureLoadBalancer",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 65001,
							"direction": "Inbound"
						}
					}, {
						"name": "DenyAllInBound",
						"properties": {
							"description": "Deny all inbound traffic",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "*",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "*",
							"access": "Deny",
							"priority": 65500,
							"direction": "Inbound"
						}
					}, {
						"name": "AllowVnetOutBound",
						"properties": {
							"description": "Allow outbound traffic from all VMs to all VMs in VNET",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "*",
							"sourceAddressPrefix": "VirtualNetwork",
							"destinationAddressPrefix": "VirtualNetwork",
							"access": "Allow",
							"priority": 65000,
							"direction": "Outbound"
						}
					}, {
						"name": "AllowInternetOutBound",
						"properties": {
							"description": "Allow outbound traffic from all VMs to Internet",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "*",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "Internet",
							"access": "Allow",
							"priority": 65001,
							"direction": "Outbound"
						}
					}, {
						"name": "DenyAllOutBound",
						"etag": "W/\"7b56ff6c-dd40-4b16-9e59-ffadc8f592a4\"",
						"properties": {
							"provisioningState": "Succeeded",
							"description": "Deny all outbound traffic",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "*",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "*",
							"access": "Deny",
							"priority": 65500,
							"direction": "Outbound",
							"sourceAddressPrefixes": [],
							"destinationAddressPrefixes": []
						}
					}
				]
			}
		}, {
			"apiVersion": "2017-06-01",
			"type": "Microsoft.Network/virtualNetworks",
			"name": "[variables('virtualNetworkName')]",
			"location": "[variables('location')]",
			"properties": {
				"addressSpace": {
					"addressPrefixes": [
						"[variables('addressPrefix')]"
					]
				},
				"subnets": [{
						"name": "[concat(variables('SubnetName'), 'dmz')]",
						"properties": {
							"addressPrefix": "[variables('subnetPrefix0')]",
                            "networkSecurityGroup": {
								"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('NSG_DMZ_Layer'))]"
							}
						}
					}, {
						"name": "[concat(variables('SubnetName'), 'app')]",
						"properties": {
							"addressPrefix": "[variables('subnetPrefix1')]",
							"networkSecurityGroup": {
								"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('NSG_App_Layer'))]"
							},
							"routeTable": {
								"id": "[resourceId('Microsoft.Network/routeTables', variables('routetable1'))]"
							}
						}
					}, {
						"name": "[concat(variables('SubnetName'), 'data')]",
						"properties": {
							"addressPrefix": "[variables('subnetPrefix2')]",
                            "networkSecurityGroup": {
								"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('NSG_Data_Layer'))]"
							},
							"routeTable": {
								"id": "[resourceId('Microsoft.Network/routeTables', variables('routetable1'))]"
							}
						}
					}, {
						"name": "[concat(variables('SubnetName'), 'pub')]",
						"properties": {
							"addressPrefix": "[variables('subnetPrefix3')]",
                            "networkSecurityGroup": {
								"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('NSG_DMZ_Layer'))]"
							}
						}
					}
				]
			},
			"dependsOn": [
				"[resourceId('Microsoft.Network/networkSecurityGroups', variables('NSG_App_Layer'))]",
				"[resourceId('Microsoft.Network/routeTables', variables('routetable1'))]",
				"[resourceId('Microsoft.Network/networkSecurityGroups', variables('NSG_Data_Layer'))]",
				"[resourceId('Microsoft.Network/networkSecurityGroups', variables('NSG_DMZ_Layer'))]"
			]
		},
		{
            "apiVersion": "2017-05-10",
            "name": "[concat('Application', '-', 'Deployment')]",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[resourceGroup().name]",
            "dependsOn": [
				"[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
			],
            "properties": {
                "mode": "Incremental",
                "template": {
					"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
					"contentVersion": "1.0.0.0",
					"variables": {
						"adminUsername": "c3e-user",
						"adminPublicKey": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCB4mcqibpEHBXazykZkKObRiQGuevw/KyCaCDFDIDMveHUbrrQYtf/obks/C1X8b0yBgALGfbXhGn0ikixhCLKG31Adv+JCXxiut4arXhjPsAdN4MCXppyJmtZ89CAB3MD7CDlrJLMwl8uB/igY3sGA171clqb4toUbRfdaiD/vy8BqKFSIrE/nvuRtxLZe3U2qqGpt6e0kXWO8BnxY1aslITOMXWPhh2bZwFvvBOTbwvVmeq29QepYPkgQBvg6g3N6NOteCagtJFrmfEk2iXH3NWJIo948923LSaspcqLAcqZbtH9YK+0CihMmMQwOQUDIOMbO06CtIvm/vTUC0vf",
						"virtualNetworkName": "dev-azure-vnet-01",
						"vnetId": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",		
						"AppLayer":{
							"networkInterfaceName": "dev-azure-nic-app-m-01",
							"AvailabilitySetName":"dev-azure-aset-app-01",
							"availabilitySetPlatformFaultDomainCount": "3",
							"availabilitySetPlatformUpdateDomainCount": "5",
							"NSG_App_Layer": "dev-azure-nsg-app",
							"subnetRef": "[concat(variables('vnetId'), '/subnets/', 'dev-azure-sn-app')]",
							"virtualMachineName": "dev-azure-app-m-01",
							"virtualMachineSize": "Standard_D2s_v3"
						},
						"location": "[resourceGroup().location]",
						"publicIpAddressName": "dev-azure-pip-ag-01",
						"publicIpAddressType": "Dynamic",
						"image": {
							"publisher": "OpenLogic",
							"offer": "CentOS",
							"sku": "7.3",
							"version": "latest"
						}
					},
					"resources": [
						{
							"name": "[variables('AppLayer').AvailabilitySetName]",
							"type": "Microsoft.Compute/availabilitySets",
							"apiVersion": "2016-04-30-preview",
							"location": "[variables('location')]",
							"properties": {
								"platformFaultDomainCount": "[variables('AppLayer').availabilitySetPlatformFaultDomainCount]",
								"platformUpdateDomainCount": "[variables('AppLayer').availabilitySetPlatformUpdateDomainCount]",
								"managed": true
							}
						},
						{
							"name": "[variables('publicIpAddressName')]",
							"type": "Microsoft.Network/publicIpAddresses",
							"apiVersion": "2017-08-01",
							"location": "[variables('location')]",
							"properties": {
								"publicIpAllocationMethod": "[variables('publicIpAddressType')]",
								"idleTimeoutInMinutes": 4,
								"dnsSettings": {
									"domainNameLabel": "[variables('publicIpAddressName')]",
									"fqdn": "[concat(variables('publicIpAddressName'),uniqueString(resourceGroup().id),'.westus.cloudapp.azure.com')]"
								}
							},
							"sku": {
								"name": "Basic"
							}
						},
						{
							"name": "[variables('AppLayer').networkInterfaceName]",
							"type": "Microsoft.Network/networkInterfaces",
							"apiVersion": "2016-09-01",
							"location": "[variables('location')]",
							"dependsOn": [
								"[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]"
							],
							"properties": {
								"ipConfigurations": [
									{
										"name": "ipconfig1",
										"properties": {
											"subnet": {
												"id": "[variables('AppLayer').subnetRef]"
											},
											"privateIPAllocationMethod": "Dynamic",
											"publicIpAddress": {
												"id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
											}
										}
									}
								],
								"networkSecurityGroup": {
									"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('AppLayer').NSG_App_Layer)]"
								}
							}
						},
						{
							"name": "[variables('AppLayer').virtualMachineName]",
							"type": "Microsoft.Compute/virtualMachines",
							"apiVersion": "2016-04-30-preview",
							"location": "[variables('location')]",
							"dependsOn": [
								"[concat('Microsoft.Network/networkInterfaces/', variables('AppLayer').networkInterfaceName)]",
								"[concat('Microsoft.Compute/availabilitySets/', variables('AppLayer').AvailabilitySetName)]"
							],
							"properties": {
								"osProfile": {
									"computerName": "[variables('AppLayer').virtualMachineName]",
									"adminUsername": "[variables('adminUsername')]",
									"linuxConfiguration": {
										"disablePasswordAuthentication": "true",
										"ssh": {
											"publicKeys": [
												{
													"path": "[concat('/home/', variables('adminUsername'), '/.ssh/authorized_keys')]",
													"keyData": "[variables('adminPublicKey')]"
												}
											]
										}
									}
								},
								"hardwareProfile": {
									"vmSize": "[variables('AppLayer').virtualMachineSize]"
								},
								"storageProfile": {
									"imageReference": "[variables('image')]",
									"osDisk": {
										"createOption": "fromImage",
										"managedDisk": {
											"storageAccountType": "Premium_LRS"
										}
									},
									"dataDisks": []
								},
								"networkProfile": {
									"networkInterfaces": [
										{
											"id": "[resourceId('Microsoft.Network/networkInterfaces', variables('AppLayer').networkInterfaceName)]"
										}
									]
								},
								"availabilitySet": {
									"id": "[resourceId('Microsoft.Compute/availabilitySets', variables('AppLayer').AvailabilitySetName)]"
								}
							}
						}
					]
                }
            }
        }
	]
}
