{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"adminUsername": {
			"type": "string",
			"metadata": {
				"description": "Username for the Virtual Machine."
			}
		},
		"adminPassword": {
			"type": "securestring",
			"metadata": {
				"description": "Password for the Virtual Machine."
			}
		},
		"_artifactsLocation": {
			"type": "string",
			"metadata": {
				"description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
			},
			"defaultValue": "https://raw.githubusercontent.com/alihhussain/AzureTemplates/master/Automation%20Demo/TestWebPage"
		},
		"_artifactsLocationSasToken": {
			"type": "securestring",
			"metadata": {
				"description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
			},
			"defaultValue": ""
		}
	},
	"variables": {
		"nicNameASR": "myASRVMNic",
		"subnetName": "Subnet-1",
		"subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
		"vmNameASR": "MyASRVM",
		"virtualNetworkName": "sshVNET",
		"publicIPAddressNameASR": "ASRPublicIP",
		"dnsNameForPublicIPASR": "[concat('teamcimasr', uniqueString(resourceGroup().id))]",
		"scriptFolder": ".",
		"scriptFileName": "Copy-FileFromAzure.ps1",
		"fileToBeCopied": "FileToBeCopied.txt",
		"networkSecurityGroupNameASR": "networkSecurityGroup1",
        "ASRname": "asrvault",
		"scriptParameters": "[concat('-artifactsLocation ', parameters('_artifactsLocation'), ' -artifactsLocationSasToken \"', parameters('_artifactsLocationSasToken'), '\" -folderName ', variables('scriptFolder'), ' -fileToInstall ', variables('fileToBeCopied'))]"
	},
	"resources": [{
            "condition": "[equals(parameters('ASR'),'true')]",
			"apiVersion": "2016-09-01",
			"type": "Microsoft.Network/publicIPAddresses",
			"name": "[variables('publicIPAddressNameASR')]",
			"location": "[resourceGroup().location]",
			"properties": {
				"publicIPAllocationMethod": "Dynamic",
				"dnsSettings": {
					"domainNameLabel": "[variables('dnsNameForPublicIPASR')]"
				}
			}
		}, {
            "condition": "[equals(parameters('ASR'),'true')]",
			"apiVersion": "2016-12-01",
			"name": "[variables('ASRname')]",
			"location": "[resourceGroup().location]",
			"type": "Microsoft.RecoveryServices/vaults",
			"sku": {
				"name": "RS0",
				"tier": "Standard"
			},
			"properties": {}
		}, {
            "condition": "[equals(parameters('ASR'),'true')]",
			"apiVersion": "2016-09-01",
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[variables('nicNameASR')]",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressNameASR'))]",
				"[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupNameASR'))]"
			],
			"properties": {
				"ipConfigurations": [{
						"name": "ipconfigASR",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"publicIPAddress": {
								"id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressNameASR'))]"
							},
							"subnet": {
								"id": "[variables('subnetRef')]"
							}
						}
					}
				],
				"networkSecurityGroup": {
					"id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('networkSecurityGroupNameASR'))]"
				}
			}
		}, {
            "condition": "[equals(parameters('ASR'),'true')]",
			"apiVersion": "2016-09-01",
			"type": "Microsoft.Network/networkSecurityGroups",
			"name": "[variables('networkSecurityGroupNameASR')]",
			"location": "[resourceGroup().location]",
			"properties": {
				"securityRules": [{
						"name": "rdp_rule",
						"properties": {
							"description": "Locks inbound down to RDP default port 3389.",
							"protocol": "Tcp",
							"sourcePortRange": "*",
							"destinationPortRange": "3389",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 125,
							"direction": "Inbound"
						}
					}, {
						"name": "ssh_rule",
						"properties": {
							"description": "Locks inbound down to ssh default port 22.",
							"protocol": "Tcp",
							"sourcePortRange": "*",
							"destinationPortRange": "22",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 123,
							"direction": "Inbound"
						}
					}, {
						"name": "nginx_rule",
						"properties": {
							"description": "Locks inbound down to nginx default port 80.",
							"protocol": "Tcp",
							"sourcePortRange": "*",
							"destinationPortRange": "80",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 124,
							"direction": "Inbound"
						}
					}
				]
			}
		}, {
            "condition": "[equals(parameters('ASR'),'true')]",
			"apiVersion": "2016-04-30-preview",
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[variables('vmNameASR')]",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"[concat('Microsoft.Network/networkInterfaces/', variables('nicNameASR'))]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "Standard_DS11_v2"
				},
				"osProfile": {
					"computerName": "[variables('vmNameASR')]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "MicrosoftWindowsServer",
						"offer": "WindowsServer",
						"sku": "2012-R2-Datacenter",
						"version": "latest"
					},
					"osDisk": {
						"createOption": "FromImage"
					}
				},
				"networkProfile": {
					"networkInterfaces": [{
							"id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicNameASR'))]"
						}
					]
				}
			},
			"resources": [{
					"type": "extensions",
					"name": "CustomScriptExtension",
					"apiVersion": "2015-06-15",
					"location": "[resourceGroup().location]",
					"dependsOn": [
						"[variables('vmNameASR')]"
					],
					"properties": {
						"publisher": "Microsoft.Compute",
						"type": "CustomScriptExtension",
						"typeHandlerVersion": "1.8",
						"autoUpgradeMinorVersion": true,
						"settings": {
							"fileUris": [
								"[concat(parameters('_artifactsLocation'), '/', variables('ScriptFolder'), '/', variables('ScriptFileName'), parameters('_artifactsLocationSasToken'))]"
							],
							"commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('scriptFolder'), '/', variables('scriptFileName'), ' ', variables('scriptParameters'))]"
						}
					}
				}
			]
		}
	],
	"outputs": {
		"vm-fqdn": {
			"type": "string",
			"value": "[reference(variables('publicIPAddressNameASR'), '2016-03-30').dnsSettings.fqdn]"
		}
	}
}
